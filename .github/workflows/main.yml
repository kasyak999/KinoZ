name: Основной рабочий процесс KinoZ
on:
  push:
    branches:
    - main
jobs:
  backend_tests:
    name: Тестирование backend
    runs-on: ubuntu-latest
    steps:
      - name: Получения исходного кода
        uses: actions/checkout@v3
      - name: Установка пайтон
        uses: actions/setup-python@v4
        with:
          python-version: 3.13
      - name: Установка зависимостей
        run: |
          python -m pip install --upgrade pip 
          pip install flake8
      - name: Проверяем flake8
        run: python -m flake8 backend/
      - name: Запуск тестов pytest
        run: |
          pip install -r ./backend/requirements.txt
          pytest
  push_to_dockerhub_backend:
    name: Отправка образа backend
    runs-on: ubuntu-latest
    needs: backend_tests
    steps:
      - name: Получение исходного кода из репозитория
        uses: actions/checkout@v3
      - name: Установка сборщика контейнеров Docker
        uses: docker/setup-buildx-action@v2
      - name: Авторизация на Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }} 
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Одновременный билд и пуш образа в Docker Hub
        uses: docker/build-push-action@v4
        with:
          context: ./backend/
          push: true
          tags: kasyak999/kinoz_backend:latest
  push_to_dockerhub_nginx:
    name: Отправка образа nginx
    runs-on: ubuntu-latest
    needs: backend_tests
    steps:
      - name: Получение исходного кода из репозитория
        uses: actions/checkout@v3
      - name: Установка сборщика контейнеров Docker
        uses: docker/setup-buildx-action@v2
      - name: Авторизация на Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }} 
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Одновременный билд и пуш образа в Docker Hub
        uses: docker/build-push-action@v4
        with:
          context: ./nginx/
          push: true
          tags: kasyak999/kinoz_nginx:latest
  deploy:
    name: Загрузка на удаленный сервер
    runs-on: ubuntu-latest
    needs: 
      - push_to_dockerhub_backend
      - push_to_dockerhub_nginx
    steps:
    - name: Получение исходного кода из репозитория
      uses: actions/checkout@v3
    - name: Копируем docker-compose.production.yml на сервер
      uses: appleboy/scp-action@master
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USER }}
        key: ${{ secrets.SSH_KEY }}
        source: "docker-compose.production.yml"
        target: "kinoz"
    - name: Выполнение удаленных команд ssh для развертывания
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USER }}
        key: ${{ secrets.SSH_KEY }}
        script: |
          cd kinoz
          echo "--- Обновляем compose"
          echo ${{ secrets.SUDO_PASSWORD }} | sudo -S docker compose -f docker-compose.production.yml pull
          echo "--- Остановить compose"
          echo ${{ secrets.SUDO_PASSWORD }} | sudo -S docker compose -f docker-compose.production.yml down
          echo "--- Запуск compose в фоне"
          echo ${{ secrets.SUDO_PASSWORD }} | sudo -S docker compose -f docker-compose.production.yml up -d
          echo "--- Очищаем мусор в докерах"
          echo ${{ secrets.SUDO_PASSWORD }} | sudo -S docker system prune -af
  send_message:
    name: Отправка сообщения в телеграмм
    runs-on: ubuntu-latest
    needs: deploy
    steps:
    - name: Send message
      uses: appleboy/telegram-action@master
      with:
        to: ${{ secrets.TELEGRAM_TO }}
        token: ${{ secrets.TELEGRAM_TOKEN }}
        message: Деплой на https://kinoz.ddns.net/ успешно выполнен!